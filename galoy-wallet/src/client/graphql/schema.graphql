type Query {
  btcPrice: Price
}

"""
Non-fractional signed whole numeric value between -(2^53) + 1 and 2^53 - 1
"""
scalar SafeInt

enum ExchangeCurrencyUnit {
  BTCSAT
  USDCENT
}

"""
Price amount expressed in base/offset. To calculate, use: `base / 10^offset`
"""
type Price {
  base: SafeInt!
  currencyUnit: ExchangeCurrencyUnit!
  formattedAmount: String!
  offset: Int!
}

"""
Phone number which includes country code
"""
scalar Phone

type Mutation {
  userRequestAuthCode(input: UserRequestAuthCodeInput!): SuccessPayload!
}

input UserRequestAuthCodeInput {
  phone: Phone!
}

interface Error {
  message: String!
  path: [String]
}

type SuccessPayload {
  errors: [Error!]!
  success: Boolean
}
